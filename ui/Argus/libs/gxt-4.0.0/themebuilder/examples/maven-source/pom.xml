<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>sample-theme</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Sample theme</name>
  <properties>
    <gxt.version>4.0.0-SNAPSHOT</gxt.version>
    <gwt.version>2.7.0</gwt.version>
    <phantomjs.version>1.9.2</phantomjs.version>
    <bin>bin/phantomjs</bin>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.7.0</version>
    </dependency>
    <dependency>
      <groupId>com.sencha.gxt</groupId>
      <artifactId>gxt</artifactId>
      <version>${gxt.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sencha.gxt</groupId>
      <artifactId>gxt-themebuilder</artifactId>
      <version>${gxt.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
      </resource>
    </resources>
  </build>
  <profiles>
    <profile>
      <id>generate</id>
      <build>
        <plugins>
          <!-- First, download the PhantomJS bin that can run locally. See the profiles section for how the right version
          is selected. If a local version is used instead, this isn't necessary, but each computer that runs this maven
          script will need a copy of phantom to correctly generate the theme. -->
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>maven-download-plugin</artifactId>
            <version>1.1.0</version>
            <executions>
              <execution>
                <id>download-phantomjs</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>https://phantomjs.googlecode.com/files/phantomjs-1.9.2-${platform}${archive}</url>
                  <outputDirectory>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/phantomjs</outputDirectory>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <unpack>true</unpack>
            </configuration>
          </plugin>
          <!-- Run the themer with the PhantomJS bin downloaded above. Generate classes into target/theme-classes. This
           is done in the generate-sources phase, so that it could be copied to the build path, or in this case
           src/main/java and compiled from there. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>generate-theme</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/bin/java</executable>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath/>
                    <argument>-DphantomBin=/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/phantomjs/phantomjs-1.9.2-${platform}/${bin}</argument>
                    <argument>com.sencha.gxt.themebuilder.ThemeBuilder</argument>
                    <!-- Build all generated sources into the classes directory so we can filter out the sources
                     and put them in src/main/java -->
                    <argument>-gen</argument>
                    <argument>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/themeclasses</argument>
                    <!-- These next several arguments are optional, and are here to make it easier to debug issues in the theme -->
                    <argument>-imageFile</argument>
                    <argument>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/snapshot.png</argument>
                    <argument>-manifestFile</argument>
                    <argument>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/snapshot.json</argument>
                    <argument>-out</argument>
                    <argument>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/theme.jar</argument>
                    <argument>-warDir</argument>
                    <argument>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/war</argument>
                    <!-- List theme config files here -->
                    <argument>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/themeDetails.theme</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.sencha.gxt</groupId>
                <artifactId>gxt-themebuilder</artifactId>
                <version>${gxt.version}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-to-sources</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>src/main/java</outputDirectory>
                  <resources>
                    <resource>
                      <directory>/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/themeclasses</directory>
                      <excludes>
                        <exclude>**/*.class</exclude>
                      </excludes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- These profiles let us pick which version of PhantomJS to download and provide to the themer. This isn't
     required if phantom is on the path already, or if each machine where this build will be run has some way of
     specifying the phantomJS build to be used. -->
    <profile>
      <id>win32</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <platform>windows</platform>
        <bin>phantomjs.exe</bin>
        <archive>.zip</archive>
      </properties>
    </profile>

    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <platform>macosx</platform>
        <archive>.zip</archive>
      </properties>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
        </os>
      </activation>
      <properties>
        <platform>linux-i686</platform>
        <archive>.tar.bz2</archive>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>maven-download-plugin</artifactId>
            <configuration>
              <unpack>false</unpack>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>unpack-linux</id>
                <phase>compile</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <failOnError>true</failOnError>
                  <target>
                    <bunzip2 src="/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/phantomjs/phantomjs-1.9.2-${platform}.tar.bz2"/>
                    <untar src="/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/phantomjs/phantomjs-1.9.2-${platform}.tar" dest="/Users/teamcity/buildAgent/work/535f25f759aef5e6/build/target/phantomjs/"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>lin64</id>
      <activation>
        <os>
          <family>unix</family>
          <arch>amd64</arch>
          <name>linux</name>
        </os>
      </activation>
      <properties>
        <platform>linux-x86_64</platform>
      </properties>
    </profile>
  </profiles>
</project>
